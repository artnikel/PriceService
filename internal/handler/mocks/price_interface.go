// Code generated by mockery v2.18.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// PriceInterface is an autogenerated mock type for the PriceInterface type
type PriceInterface struct {
	mock.Mock
}

// ReadPrices provides a mock function with given fields: ctx, company
func (_m *PriceInterface) ReadPrices(ctx context.Context, company string) (float64, error) {
	ret := _m.Called(ctx, company)

	var r0 float64
	if rf, ok := ret.Get(0).(func(context.Context, string) float64); ok {
		r0 = rf(ctx, company)
	} else {
		r0 = ret.Get(0).(float64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, company)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPriceInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewPriceInterface creates a new instance of PriceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPriceInterface(t mockConstructorTestingTNewPriceInterface) *PriceInterface {
	mock := &PriceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
